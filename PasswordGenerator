import java.security.SecureRandom;

public class PasswordGenerator {

    // Caracteres permitidos para construir la contraseña
    private static final String LOWERCASE_CHARACTERS = "abcdefghijklmnopqrstuvwxyz";
    private static final String UPPERCASE_CHARACTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static final String DIGITS = "0123456789";
    private static final String SPECIAL_CHARACTERS = "!@#$%^&*()-_=+[]{}|;:'\",.<>/?";

    // Método estático para generar contraseñas aleatorias
    public static String generatePassword(int length) {
        // Verificar que la longitud de la contraseña sea al menos 8 caracteres
        if (length < 8) {
            throw new IllegalArgumentException("La longitud de la contraseña debe ser al menos 8 caracteres.");
        }

        // Crear un generador seguro de números aleatorios
        SecureRandom random = new SecureRandom();

        // Inicializar un StringBuilder para construir la contraseña
        StringBuilder password = new StringBuilder();

        // Añadir al menos una letra minúscula, una letra mayúscula, un número y un carácter especial
        password.append(getRandomCharacter(LOWERCASE_CHARACTERS, random));
        password.append(getRandomCharacter(UPPERCASE_CHARACTERS, random));
        password.append(getRandomCharacter(DIGITS, random));
        password.append(getRandomCharacter(SPECIAL_CHARACTERS, random));

        // Generar el resto de la contraseña
        for (int i = 4; i < length; i++) {
            // Concatenar un carácter aleatorio de la combinación de caracteres permitidos
            String allCharacters = LOWERCASE_CHARACTERS + UPPERCASE_CHARACTERS + DIGITS + SPECIAL_CHARACTERS;
            password.append(getRandomCharacter(allCharacters, random));
        }

        // Mezclar los caracteres en la contraseña para mayor aleatoriedad
        String shuffledPassword = shuffleString(password.toString(), random);

        return shuffledPassword;
    }

    // Método para obtener un carácter aleatorio de una cadena dada
    private static char getRandomCharacter(String source, SecureRandom random) {
        int randomIndex = random.nextInt(source.length());
        return source.charAt(randomIndex);
    }

    // Método para mezclar una cadena de caracteres
    private static String shuffleString(String input, SecureRandom random) {
        char[] characters = input.toCharArray();
        for (int i = characters.length - 1; i > 0; i--) {
            int randomIndex = random.nextInt(i + 1);
            char temp = characters[i];
            characters[i] = characters[randomIndex];
            characters[randomIndex] = temp;
        }
        return new String(characters);
    }

    // Ejemplo de uso
    public static void main(String[] args) {
        // Generar una contraseña de longitud 12 (puedes cambiar la longitud según tus necesidades)
        String generatedPassword = PasswordGenerator.generatePassword(12);
        System.out.println("Contraseña generada: " + generatedPassword);
    }
}
